{"version":3,"sources":["ContentTypeDropdown.js","config.js","ContentList.js","ContentDetails.js","App.js","serviceWorker.js","index.js"],"names":["ContentTypeDropdown","options","text","toLowerCase","value","react_default","a","createElement","Header","as","Dropdown","inline","placeholder","onChange","this","props","handleDropdown","match","params","type","React","Component","withRouter","baseUrl","ContentList","_React$Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","list","loading","inherits","createClass","key","fetchList","prevProps","_this2","setState","fetch","concat","then","response","json","Array","isArray","catch","err","console","log","_this3","Segment","List","divided","animated","verticalAlign","map","item","index","Item","Content","Link","to","url","Icon","name","title","Description","bite","Dimmer","active","inverted","Loader","ContentDetails","content","fetchContent","bind","assertThisInitialized","selectedContent","slice","length","Parser","keys","App","_Component","selectedContentType","selectedContentUrl","handleListSelection","e","component","history","push","className","icon","color","Switch","Route","path","exact","render","src_ContentTypeDropdown","selected","Fragment","src_ContentList","src_ContentDetails","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b1e4dca.chunk.js","sourcesContent":["import React from \"react\";\nimport { Dropdown, Header } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ContentTypeDropdown extends React.Component {\n\trender() {\n\t\tconst options = [\n\t\t\t{\n\t\t\t\ttext: \"Index\".toLowerCase(),\n\t\t\t\tvalue: \"index\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Articles\".toLowerCase(),\n\t\t\t\tvalue: \"articles\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Blog\".toLowerCase(),\n\t\t\t\tvalue: \"blog\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Questions\".toLowerCase(),\n\t\t\t\tvalue: \"questions\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Glossary\".toLowerCase(),\n\t\t\t\tvalue: \"glossary\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"States\".toLowerCase(),\n\t\t\t\tvalue: \"states\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttext: \"Topics\".toLowerCase(),\n\t\t\t\tvalue: \"topics\"\n\t\t\t}\n\t\t];\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t\t<Header as=\"h3\">\n\t\t\t\t\t\tList me objects from{\" \"}\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\tplaceholder=\"category\"\n\t\t\t\t\t\t\tonChange={this.props.handleDropdown}\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\tvalue={this.props.match.params.type}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Header>\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(ContentTypeDropdown);\n","export const baseUrl = `https://www.healthcare.gov`;\n","import React from \"react\";\nimport { List, Segment, Loader, Dimmer, Icon } from \"semantic-ui-react\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { baseUrl } from \"./config\";\n\nexport class ContentList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: [],\n\t\t\tloading: false\n\t\t};\n\t\t// this.fetchList = this.fetchList.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.match.params.type) {\n\t\t\tthis.fetchList();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.match.params.type !== prevProps.match.params.type) {\n\t\t\tthis.fetchList();\n\t\t}\n\t}\n\n\tfetchList() {\n\t\tthis.setState({ loading: true });\n\t\tfetch(`${baseUrl}/api/${this.props.match.params.type}.json`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tif (Array.isArray(json)) {\n\t\t\t\t\tthis.setState({ list: json, loading: false });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlist: json[this.props.match.params.type],\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\tif (Array.isArray(this.state.list) && this.state.loading === false) {\n\t\t\treturn (\n\t\t\t\t<Segment>\n\t\t\t\t\t<List divided animated verticalAlign=\"middle\">\n\t\t\t\t\t\t{this.state.list.map((item, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<List.Item key={index}>\n\t\t\t\t\t\t\t\t\t<List.Content>\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto={`/${\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.match.params.type\n\t\t\t\t\t\t\t\t\t\t\t}${item.url}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<List.Header as=\"a\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon name=\"caret square right\" />\n\t\t\t\t\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t\t\t\t\t</List.Header>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t<List.Description>\n\t\t\t\t\t\t\t\t\t\t\t{item.url}\n\t\t\t\t\t\t\t\t\t\t</List.Description>\n\t\t\t\t\t\t\t\t\t\t{item.bite}\n\t\t\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</List>\n\t\t\t\t</Segment>\n\t\t\t);\n\t\t} else if (this.state.loading === true) {\n\t\t\treturn (\n\t\t\t\t<Segment>\n\t\t\t\t\t<Dimmer active inverted>\n\t\t\t\t\t\t<Loader inverted>Loading</Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t</Segment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <Segment>No Content Type Selected</Segment>;\n\t\t}\n\t}\n}\n\nexport default withRouter(ContentList);\n// export default ContentList;\n","import React from \"react\";\nimport Parser from \"html-react-parser\";\nimport { withRouter } from \"react-router-dom\";\nimport { baseUrl } from \"./config\";\n\nclass ContentDetails extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontent: \"\"\n\t\t};\n\t\tthis.fetchContent = this.fetchContent.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.selectedContent === \"\") {\n\t\t\tthis.fetchContent();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.selectedContent !== prevProps.selectedContent) {\n\t\t\tthis.fetchContent();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.setState({ content: \"\" });\n\t}\n\n\tfetchContent() {\n\t\tfetch(\n\t\t\t`${baseUrl}/${this.props.match.params[0].slice(\n\t\t\t\t0,\n\t\t\t\tthis.props.selectedContent.length - 1\n\t\t\t)}.json`\n\t\t)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => this.setState({ content: json }))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\tif (this.state.content !== \"\") {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{this.state.content.title}</h1>\n\t\t\t\t\t<div>{Parser(this.state.content.content)}</div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{Object.keys(this.state.content).map(key => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={key}>\n\t\t\t\t\t\t\t\t\t<b>{key}:</b>\n\t\t\t\t\t\t\t\t\t{this.state.content[key]}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <div>No content Selected</div>;\n\t\t}\n\t}\n}\n\nexport default withRouter(ContentDetails);\n","import React, { Component } from \"react\";\nimport { Route, withRouter, Switch } from \"react-router-dom\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\nimport ContentTypeDropdown from \"./ContentTypeDropdown\";\nimport ContentList from \"./ContentList\";\nimport ContentDetails from \"./ContentDetails\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedContentType: \"\",\n      selectedContentUrl: \"\"\n    };\n    this.handleDropdown = this.handleDropdown.bind(this);\n    this.handleListSelection = this.handleListSelection.bind(this);\n  }\n\n  handleDropdown(e, component) {\n    // debugger;\n    // this.setState({ selectedContentType: component.value });\n    this.props.history.push(`/${component.value}`);\n  }\n\n  handleListSelection(item) {\n    this.setState({ selectedContentUrl: item.url });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <center>\n          <Header as=\"h1\" icon>\n            <Icon\n              name=\"heartbeat\"\n              color=\"red\"\n              className=\"animated pulse infinite\"\n            />\n            HealthCare.gov frontend challenge my M.K.\n          </Header>\n        </center>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <ContentTypeDropdown\n                handleDropdown={this.handleDropdown}\n                selected={this.state.selectedContentType}\n              />\n            )}\n          />\n          <Route\n            path=\"/:type\"\n            exact\n            render={() => (\n              <React.Fragment>\n                <ContentTypeDropdown\n                  handleDropdown={this.handleDropdown}\n                  selected={this.state.selectedContentType}\n                />\n                <ContentList handleListSelection={this.handleListSelection} />\n              </React.Fragment>\n            )}\n          />\n          <Route path=\"/:type/*\">\n            <ContentDetails selectedContent={this.state.selectedContentUrl} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.js\";\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}